# SANS2d    
#  8/4/11 hack check transmissions to do M2 / M1 by wavelength
#path="\\\isis\inst$\NDXSANS2D\Instrument\data\cycle_10_3\\"
path="U:\\processed\\"
pfix="sans2d"
sfix="-add.nxs"
#
direct=6116
#
specincid=1
spectrans=2
backincid1=35000
backincid2=95000
backtrans1=80800
backtrans2=98000
wavbins="1.0,0.125,15.0"
#
#	Load the monitors only and divide by uamphr
directrun=str(direct)
#
# read direct beam   ================================================================
nzeros=8-len(directrun)
fpad=""
for ii in range(nzeros):
   fpad+="0"
filename=path+pfix+fpad+directrun+sfix
print "reading file:   "+filename
check=LoadNexus(Filename=filename,OutputWorkspace=directrun,SpectrumMin=1,SpectrumMax=1).workspace()
print "uamphr = " + str(check.getSampleDetails().getProtonCharge())
m1=LoadNexus(Filename=filename,OutputWorkspace=directrun,SpectrumMin=1,SpectrumMax=3)
#NormaliseByCurrent(run+"_norm",run+"_norm")
#
# incident spectrum
CropWorkspace(directrun, directrun+"_incid", StartWorkspaceIndex=specincid-1, EndWorkspaceIndex=specincid-1)
ConvertToDistribution(directrun+"_incid")
#                                        integrate long time region to average flat background
Integration(directrun+"_incid","integral",backincid1,backincid2)
flat = mtd["integral"].readY(0)[0]/(backincid2-backincid1)
CreateSingleValuedWorkspace("scalar",flat)
#                                          subtract flat background
Minus(directrun+"_incid","scalar",directrun+"_incid_sub")
#  trans spectrum
CropWorkspace(directrun, directrun+"_trans", StartWorkspaceIndex=spectrans-1, EndWorkspaceIndex=spectrans-1)
Integration(directrun+"_incid","integral",backtrans1,backtrans2)
ConvertToDistribution(directrun+"_trans")
Integration(directrun+"_trans","integral",backtrans1,backtrans2)
flat = mtd["integral"].readY(0)[0]/(backtrans2-backtrans1)
CreateSingleValuedWorkspace("scalar",flat)
Minus(directrun+"_trans","scalar",directrun+"_trans_sub")
#
ConvertUnits(directrun+"_incid_sub",directrun+"_incid_wav","Wavelength")
ConvertUnits(directrun+"_trans_sub",directrun+"_trans_wav","Wavelength")
#
#
# rebin everything
InterpolatingRebin(directrun+"_incid_wav",directrun+"_incid_wav",wavbins)
InterpolatingRebin(directrun+"_trans_wav",directrun+"_trans_wav",wavbins)
#
Divide(directrun+"_trans_wav",directrun+"_incid_wav","M1byM2")
######################################################################
#Python Script Generated by Algorithm History Display 
######################################################################
LoadRKH(Filename="U:/Masks/DIRECT_RUN524_4m_25Nov09.dat",OutputWorkspace="directM2")
ConvertToHistogram("directM2","directM2")
InterpolatingRebin("directM2","directM2",wavbins)
#CropWorkspace("directM2","directM2run",1.0,15.0)
#CropWorkspace("M1byM2","M1byM2",1.0,15.0)
Multiply("M1byM2","directM2","directM1_try")
#
# FITH INTEGRATION ========================================================================================
#	Integration(run+"_m3_div","integral",str(7.0),str(12.0))
#	try:
#				cr5 = mtd["integral"].readY(0)[0]
